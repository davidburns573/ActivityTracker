apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'org.jetbrains.dokka'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "tech.davidburns.activitytracker"
        minSdkVersion 26
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "mock"

    // If you need to add more flavors, consider using flavor dimensions.
    productFlavors {
        mock {
            dimension "mock"
            applicationIdSuffix = ".mock"
        }
        prod {
            // No special config
        }
    }

    def build_param = "${build}"
    if (build_param == "devCI") {
        // Exclude all except mockDebug flavor
        android.variantFilter { variant ->
            if (variant.getFlavors().get(0).name != 'mock' || variant.buildType.name != 'debug') {
                variant.setIgnore(true)
            }
        }
    } else if (build_param == "releaseCI") {
        // Exclude all except prodRelease flavor
        android.variantFilter { variant ->
            if (variant.getFlavors().get(0).name != 'prod' || variant.buildType.name != 'release') {
                variant.setIgnore(true)
            }
        }
    } else {
        // Normal local machine dev
        // Exclude mockRelease as it's not needed.
        android.variantFilter { variant ->
            if(variant.buildType.name == 'release' && variant.getFlavors().get(0).name == 'mock') {
                variant.setIgnore(true)
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.google.firebase:firebase-analytics:17.2.3'
    implementation 'com.google.firebase:firebase-auth:19.3.0'
    implementation 'com.google.android.gms:play-services-auth:17.0.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.2.1'
    implementation 'androidx.navigation:navigation-ui-ktx:2.2.1'
    implementation "androidx.recyclerview:recyclerview-selection:1.1.0-rc01"
    implementation "androidx.cardview:cardview:1.0.0"
    implementation "androidx.viewpager2:viewpager2:1.0.0"
}
